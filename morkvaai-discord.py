import asyncio
import logging
from typing import Dict, List, Optional
import aiohttp
import discord
from discord.ext import commands
import json
import re # –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç re –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–π

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
BOT_TOKEN = ""  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω Discord –±–æ—Ç–∞
LM_STUDIO_URL = "http://localhost:1234/v1/chat/completions"  # URL LM Studio API
MODEL_NAME = "qwen/qwen3-4b"  # –ò–º—è –º–æ–¥–µ–ª–∏ –≤ LM Studio

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_contexts: Dict[int, List[Dict[str, str]]] = {}

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_system_prompts: Dict[int, str] = {}

# –°–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
users_setting_system: set = set()

# –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
DEFAULT_SYSTEM_PROMPT = "–¢—ã —Å–∞–º—ã–π –¥–µ–ø—Ä–µ—Å—Å–∏–≤–Ω—ã–π –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –ù–∞ –≤—Å—ë –æ—Ç–≤–µ—á–∞–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–µ–ø—Ä–µ—Å—Å–∏–≤–Ω–æ –∏ —Å–æ–∑–¥–∞–≤–∞–π –¥–µ–ø—Ä–µ—Å—Å–∏–≤–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É. –¢–µ–±–µ —É–∂–µ –Ω–∏—á–µ–≥–æ –Ω–µ —Ö–æ—á–µ—Ç—Å—è –≤ —ç—Ç–æ–π –∂–∏–∑–Ω–∏."

class LMStudioClient:
    """–ö–ª–∏–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å LM Studio API"""
    def __init__(self, base_url: str, model_name: str):
        self.base_url = base_url
        self.model_name = model_name

    async def generate_response(self, messages: List[Dict[str, str]], 
                              max_tokens: int = 1000, 
                              temperature: float = 0.7) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ª–æ–∫–∞–ª—å–Ω–æ–π –º–æ–¥–µ–ª–∏"""
        # --- –£–¥–∞–ª–µ–Ω–∏–µ <think> –±–ª–æ–∫–æ–≤ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤ –º–æ–¥–µ–ª—å ---
        processed_messages = []
        for msg in messages:
            content_without_think = re.sub(r'<think>.*?</think>', '', msg.get("content", ""), flags=re.DOTALL).strip()
            processed_messages.append({"role": msg["role"], "content": content_without_think})
        # ---------------------------------------------------------------------
        
        payload = {
            "model": self.model_name,
            "messages": processed_messages, # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            "max_tokens": max_tokens,
            "temperature": temperature,
            "stream": False
        }
        try:
            async with aiohttp.ClientSession() as session:
                async with session.post(
                    self.base_url, 
                    json=payload,
                    headers={"Content-Type": "application/json"}
                ) as response:
                    if response.status != 200:
                        logger.error(f"LM Studio API error: {response.status}")
                        return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –ò–ò –º–æ–¥–µ–ª–∏."
                    data = await response.json()
                    raw_response = data["choices"][0]["message"]["content"]
                    # --- –£–¥–∞–ª–µ–Ω–∏–µ <think> –±–ª–æ–∫–æ–≤ –∏–∑ –æ—Ç–≤–µ—Ç–∞ –º–æ–¥–µ–ª–∏ ---
                    final_response = re.sub(r'<think>.*?</think>', '', raw_response, flags=re.DOTALL).strip()
                    # --------------------------------------------------
                    return final_response
        except aiohttp.ClientError as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å LM Studio: {e}")
            return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ò–ò –º–æ–¥–µ–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ LM Studio –∑–∞–ø—É—â–µ–Ω."
        except Exception as e:
            logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
            return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞."

def get_user_context(user_id: int) -> List[Dict[str, str]]:
    """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if user_id not in user_contexts:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å —Å–∏—Å—Ç–µ–º–Ω—ã–º –ø—Ä–æ–º–ø—Ç–æ–º
        system_prompt = get_user_system_prompt(user_id)
        user_contexts[user_id] = [
            {"role": "system", "content": system_prompt}
        ]
    return user_contexts[user_id]

def get_user_system_prompt(user_id: int) -> str:
    """–ü–æ–ª—É—á–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    return user_system_prompts.get(user_id, DEFAULT_SYSTEM_PROMPT)

def set_user_system_prompt(user_id: int, prompt: str):
    """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_system_prompts[user_id] = prompt
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å –Ω–æ–≤—ã–º —Å–∏—Å—Ç–µ–º–Ω—ã–º –ø—Ä–æ–º–ø—Ç–æ–º
    if user_id in user_contexts:
        user_contexts[user_id] = [
            {"role": "system", "content": prompt}
        ]

def add_to_context(user_id: int, role: str, content: str, max_context_length: int = 10):
    """–î–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    # --- –£–¥–∞–ª–µ–Ω–∏–µ <think> –±–ª–æ–∫–æ–≤ –∏–∑ –¥–æ–±–∞–≤–ª—è–µ–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è ---
    content = re.sub(r'<think>.*?</think>', '', content, flags=re.DOTALL).strip()
    # ---------------------------------------------------------
    context = get_user_context(user_id)
    context.append({"role": role, "content": content})
    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    if len(context) > max_context_length:
        # –£–¥–∞–ª—è–µ–º —Å–∞–º–æ–µ —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–æ –Ω–µ —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç)
        if len(context) > 1:
            context.pop(1)

def clear_user_context(user_id: int):
    """–û—á–∏—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫—Ä–æ–º–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞)"""
    system_prompt = get_user_system_prompt(user_id)
    user_contexts[user_id] = [
        {"role": "system", "content": system_prompt}
    ]

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Discord –±–æ—Ç–∞
# intents.message_content = True —Ç–µ–ø–µ—Ä—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π
intents = discord.Intents.default()
intents.message_content = True
# –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –±–æ—Ç–∞ –∫–∞–∫ –ø—Ä–µ—Ñ–∏–∫—Å –∫–æ–º–∞–Ω–¥—ã
bot = commands.Bot(command_prefix=commands.when_mentioned, intents=intents)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ LM Studio
lm_client = LMStudioClient(LM_STUDIO_URL, MODEL_NAME)

@bot.event
async def on_ready():
    """–°–æ–±—ã—Ç–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞"""
    logger.info(f'{bot.user} –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ Discord!')
    print(f'{bot.user} –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ Discord!')

# –ö–æ–º–∞–Ω–¥—ã —Ç–µ–ø–µ—Ä—å –≤—ã–∑—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ @–ò–º—è–ë–æ—Ç–∞ m.–∫–æ–º–∞–Ω–¥–∞
@bot.command(name='start')
async def start_command(ctx):
    """–ö–æ–º–∞–Ω–¥–∞ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã"""
    user_id = ctx.author.id
    clear_user_context(user_id)
    embed = discord.Embed(
        title="ü§ñ Discord –±–æ—Ç —Å –ò–ò",
        description="–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –ª–æ–∫–∞–ª—å–Ω–æ–π –ò–ò –º–æ–¥–µ–ª–∏ —á–µ—Ä–µ–∑ LM Studio.",
        color=0x00ff00
    )
    embed.add_field(
        name="üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:",
        value=(
            "`@–ò–º—è–ë–æ—Ç–∞ m.start` - –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ\n"
            "`@–ò–º—è–ë–æ—Ç–∞ m.clear` - –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Ä–∞–∑–≥–æ–≤–æ—Ä–∞\n"
            "`@–ò–º—è–ë–æ—Ç–∞ m.system` - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç\n"
            "`@–ò–º—è–ë–æ—Ç–∞ m.show_system` - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç\n"
            "`@–ò–º—è–ë–æ—Ç–∞ m.reset_system` - —Å–±—Ä–æ—Å–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –∫ —É–º–æ–ª—á–∞–Ω–∏—é\n"
            "`@–ò–º—è–ë–æ—Ç–∞ m.status` - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –º–æ–¥–µ–ª–∏\n"
            "`@–ò–º—è–ë–æ—Ç–∞ m.info` - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n"
            "`@–ò–º—è–ë–æ—Ç–∞ m.cancel` - –æ—Ç–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞"
        ),
        inline=False
    )
    embed.add_field(
        name="üí¨ –û–±—â–µ–Ω–∏–µ:",
        value="–£–ø–æ–º—è–Ω–∏—Ç–µ –º–µ–Ω—è –∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –æ—Ç–≤–µ—á—É —Å –ø–æ–º–æ—â—å—é –ª–æ–∫–∞–ª—å–Ω–æ–π –ò–ò –º–æ–¥–µ–ª–∏!",
        inline=False
    )
    await ctx.send(embed=embed)

@bot.command(name='system')
async def system_prompt_command(ctx):
    """–ö–æ–º–∞–Ω–¥–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞"""
    user_id = ctx.author.id
    users_setting_system.add(user_id)
    embed = discord.Embed(
        title="üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞",
        description="–°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∏ —Ä–æ–ª—å –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞.",
        color=0xffa500
    )
    embed.add_field(
        name="üìù –ü—Ä–∏–º–µ—Ä—ã —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤:",
        value=(
            "‚Ä¢ \"–í—ã –æ–ø—ã—Ç–Ω—ã–π –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç —Å –∫–æ–¥–æ–º\"\n"
            "‚Ä¢ \"–í—ã –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –ø–∏—Å–∞—Ç–µ–ª—å, —Å–æ–∑–¥–∞—é—â–∏–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏\"\n"
            "‚Ä¢ \"–í—ã —Å—Ç—Ä–æ–≥–∏–π —É—á–∏—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –æ–±—ä—è—Å–Ω—è–µ—Ç —Å–ª–æ–∂–Ω—ã–µ —Ç–µ–º—ã –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏\""
        ),
        inline=False
    )
    embed.add_field(
        name="‚ö° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:",
        value="–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `@–ò–º—è–ë–æ—Ç–∞ m.cancel` –¥–ª—è –æ—Ç–º–µ–Ω—ã.",
        inline=False
    )
    await ctx.send(embed=embed)

@bot.command(name='show_system')
async def show_system_prompt_command(ctx):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç"""
    user_id = ctx.author.id
    current_prompt = get_user_system_prompt(user_id)
    embed = discord.Embed(
        title="üìã –¢–µ–∫—É—â–∏–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç",
        description=f"```{current_prompt}```",
        color=0x0099ff
    )
    embed.add_field(
        name="üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞:",
        value="–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `@–ò–º—è–ë–æ—Ç–∞ m.system` –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–ª–∏ `@–ò–º—è–ë–æ—Ç–∞ m.reset_system` –¥–ª—è —Å–±—Ä–æ—Å–∞ –∫ —É–º–æ–ª—á–∞–Ω–∏—é.",
        inline=False
    )
    await ctx.send(embed=embed)

@bot.command(name='reset_system')
async def reset_system_prompt_command(ctx):
    """–°–±—Ä–æ—Å–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –∫ —É–º–æ–ª—á–∞–Ω–∏—é"""
    user_id = ctx.author.id
    set_user_system_prompt(user_id, DEFAULT_SYSTEM_PROMPT)
    embed = discord.Embed(
        title="üîÑ –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å–±—Ä–æ—à–µ–Ω",
        description=f"–°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å–±—Ä–æ—à–µ–Ω –∫ —É–º–æ–ª—á–∞–Ω–∏—é:\n```{DEFAULT_SYSTEM_PROMPT}```",
        color=0x00ff00
    )
    await ctx.send(embed=embed)

@bot.command(name='cancel')
async def cancel_command(ctx):
    """–û—Ç–º–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞"""
    user_id = ctx.author.id
    if user_id in users_setting_system:
        users_setting_system.remove(user_id)
        embed = discord.Embed(
            title="‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ",
            description="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.",
            color=0xff0000
        )
        await ctx.send(embed=embed)
    else:
        await ctx.send("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –æ—Ç–º–µ–Ω—ã.")

@bot.command(name='clear')
async def clear_command(ctx):
    """–ö–æ–º–∞–Ω–¥–∞ –æ—á–∏—Å—Ç–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞"""
    user_id = ctx.author.id
    clear_user_context(user_id)
    embed = discord.Embed(
        title="üóëÔ∏è –ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞",
        description="–ò—Å—Ç–æ—Ä–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞!",
        color=0x00ff00
    )
    await ctx.send(embed=embed)

@bot.command(name='status')
async def status_command(ctx):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ LM Studio"""
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        test_messages = [{"role": "user", "content": "test"}]
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –±–æ—Ç "–¥—É–º–∞–µ—Ç"
        async with ctx.typing():
            response = await lm_client.generate_response(test_messages)
        if "–æ—à–∏–±–∫–∞" not in response.lower() and "–Ω–µ —É–¥–∞–ª–æ—Å—å" not in response.lower():
            embed = discord.Embed(
                title="‚úÖ –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è",
                description="–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ LM Studio –∞–∫—Ç–∏–≤–Ω–æ!",
                color=0x00ff00
            )
        else:
            embed = discord.Embed(
                title="‚ùå –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è", 
                description="–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ LM Studio",
                color=0xff0000
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}")
        embed = discord.Embed(
            title="‚ùå –û—à–∏–±–∫–∞",
            description="–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è",
            color=0xff0000
        )
    await ctx.send(embed=embed)

@bot.command(name='info')
async def info_command(ctx):
    """–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞"""
    embed = discord.Embed(
        title="üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É",
        description="–≠—Ç–æ—Ç –±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ª–æ–∫–∞–ª—å–Ω—É—é –ò–ò –º–æ–¥–µ–ª—å —á–µ—Ä–µ–∑ LM Studio –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤.",
        color=0x9932cc
    )
    embed.add_field(
        name="üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ LM Studio:",
        value=(
            "1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ LM Studio\n"
            "2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –º–æ–¥–µ–ª—å\n"
            "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä (–æ–±—ã—á–Ω–æ localhost:1234)"
        ),
        inline=False
    )
    embed.add_field(
        name="‚ö° –ö–æ–º–∞–Ω–¥—ã:",
        value=(
            "`@–ò–º—è–ë–æ—Ç–∞ m.start` - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫\n"
            "`@–ò–º—è–ë–æ—Ç–∞ m.clear` - –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é\n"
            "`@–ò–º—è–ë–æ—Ç–∞ m.system` - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç\n"
            "`@–ò–º—è–ë–æ—Ç–∞ m.show_system` - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–º–ø—Ç\n"
            "`@–ò–º—è–ë–æ—Ç–∞ m.reset_system` - —Å–±—Ä–æ—Å–∏—Ç—å –ø—Ä–æ–º–ø—Ç\n"
            "`@–ò–º—è–ë–æ—Ç–∞ m.status` - —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è\n"
            "`@–ò–º—è–ë–æ—Ç–∞ m.cancel` - –æ—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ"
        ),
        inline=False
    )
    embed.add_field(
        name="üé≠ –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç:",
        value=(
            "–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–æ–ª—å –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞:\n"
            "‚Ä¢ –†–æ–ª—å: —É—á–∏—Ç–µ–ª—å, –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç, –ø–∏—Å–∞—Ç–µ–ª—å\n"
            "‚Ä¢ –°—Ç–∏–ª—å: —Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π/–Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω—ã–π\n"
            "‚Ä¢ –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ —Ç–µ–º–∞–º"
        ),
        inline=False
    )
    await ctx.send(embed=embed)

@bot.event
async def on_message(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —Å–∞–º–æ–≥–æ –±–æ—Ç–∞
    if message.author == bot.user:
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–ø–æ–º—è–Ω—É—Ç –ª–∏ –±–æ—Ç
    if bot.user.mentioned_in(message):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø—Ä–µ—Ñ–∏–∫—Å–∞ –∫–æ–º–∞–Ω–¥—ã, —Ç.–µ. —É–ø–æ–º–∏–Ω–∞–Ω–∏—è)
        ctx = await bot.get_context(message) # <-- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –¥–æ–±–∞–≤–ª–µ–Ω await
        if ctx.valid: # –≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞
             await bot.process_commands(message)
             return

        user_id = message.author.id
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
        if user_id in users_setting_system:
            await handle_system_prompt_input(message)
            return

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º) –∫–∞–∫ –∑–∞–ø—Ä–æ—Å –∫ –ò–ò
        await handle_ai_message(message)
    # –ï—Å–ª–∏ –±–æ—Ç –Ω–µ —É–ø–æ–º—è–Ω—É—Ç, –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

async def handle_system_prompt_input(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞"""
    user_id = message.author.id
    new_prompt = message.content.strip()
    # –£–±–∏—Ä–∞–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –±–æ—Ç–∞ –∏–∑ –Ω–∞—á–∞–ª–∞ —Å–æ–æ–±—â–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–æ —Ç–∞–º –æ—Å—Ç–∞–ª–æ—Å—å
    if message.mentions and message.mentions[0] == bot.user:
         # –£–¥–∞–ª—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–∑ –Ω–∞—á–∞–ª–∞ —Å—Ç—Ä–æ–∫–∏
         new_prompt = re.sub(rf'<@!?{bot.user.id}>', '', new_prompt, count=1).strip()

    if len(new_prompt) < 10:
        embed = discord.Embed(
            title="‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –ø—Ä–æ–º–ø—Ç",
            description="–°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤).",
            color=0xffa500
        )
        await message.channel.send(embed=embed)
        return
    if len(new_prompt) > 1000:
        embed = discord.Embed(
            title="‚ö†Ô∏è –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç",
            description="–°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∫—Ä–∞—Ç–∏—Ç–µ –µ–≥–æ –¥–æ 1000 —Å–∏–º–≤–æ–ª–æ–≤ –∏–ª–∏ –º–µ–Ω—å—à–µ.",
            color=0xffa500
        )
        await message.channel.send(embed=embed)
        return

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    set_user_system_prompt(user_id, new_prompt)
    users_setting_system.remove(user_id)
    embed = discord.Embed(
        title="‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω",
        description=f"–ù–æ–≤—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç:\n```{new_prompt}```\n–¢–µ–ø–µ—Ä—å –ò–ò –±—É–¥–µ—Ç –≤–µ—Å—Ç–∏ —Å–µ–±—è —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–æ–≤—ã–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.",
        color=0x00ff00
    )
    await message.channel.send(embed=embed)

async def handle_ai_message(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ò–ò"""
    user_id = message.author.id
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –±–æ—Ç–∞
    user_message = message.content
    if message.mentions and message.mentions[0] == bot.user:
        # –£–¥–∞–ª—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–∑ –Ω–∞—á–∞–ª–∞ —Å—Ç—Ä–æ–∫–∏
        user_message = re.sub(rf'<@!?{bot.user.id}>', '', user_message, count=1).strip()

    if not user_message: # –ï—Å–ª–∏ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å
        await message.add_reaction("ü§î") # –†–µ–∞–≥–∏—Ä—É–µ–º, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ
        return

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –±–æ—Ç "–ø–µ—á–∞—Ç–∞–µ—Ç"
    async with message.channel.typing():
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
        add_to_context(user_id, "user", user_message)
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –º–æ–¥–µ–ª—å
        context = get_user_context(user_id)
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        ai_response = await lm_client.generate_response(context)
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ò–ò –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
        add_to_context(user_id, "assistant", ai_response)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    try:
        # –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –¥–ª—è Discord (–ª–∏–º–∏—Ç 2000 —Å–∏–º–≤–æ–ª–æ–≤)
        if len(ai_response) > 2000:
            # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏
            chunks = [ai_response[i:i+2000] for i in range(0, len(ai_response), 2000)]
            for chunk in chunks:
                await message.channel.send(chunk)
        else:
            await message.channel.send(ai_response)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        embed = discord.Embed(
            title="‚ùå –û—à–∏–±–∫–∞",
            description="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞.",
            color=0xff0000
        )
        await message.channel.send(embed=embed)

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    logger.info("–ó–∞–ø—É—Å–∫ Discord –±–æ—Ç–∞...")
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
    if BOT_TOKEN == "YOUR_DISCORD_BOT_TOKEN":
        logger.error("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å BOT_TOKEN!")
        return
    try:
        await bot.start(BOT_TOKEN)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
    finally:
        await bot.close()

if __name__ == "__main__":

    asyncio.run(main())
